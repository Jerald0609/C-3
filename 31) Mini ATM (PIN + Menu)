using System;

class Account
{
    private string Pin;
    private decimal Balance;
    private int FailedAttempts;
    private const int MaxAttempts = 3;
    private bool Locked;

    public Account(string pin, decimal initialBalance)
    {
        Pin = pin;
        Balance = initialBalance;
        FailedAttempts = 0;
        Locked = false;
    }

    public bool Authenticate(string pinInput)
    {
        if (Locked) return false;

        if (pinInput == Pin)
        {
            FailedAttempts = 0;
            return true;
        }
        else
        {
            FailedAttempts++;
            if (FailedAttempts >= MaxAttempts)
            {
                Locked = true;
                Console.WriteLine("Account locked due to too many failed attempts.");
            }
            else
            {
                Console.WriteLine($"Incorrect PIN. {MaxAttempts - FailedAttempts} attempts left.");
            }
            return false;
        }
    }

    public bool IsLocked() => Locked;

    public void Deposit(decimal amount)
    {
        if (amount <= 0)
        {
            Console.WriteLine("Deposit must be positive.");
            return;
        }
        Balance += amount;
        Console.WriteLine($"Deposited {amount:C}. New balance: {Balance:C}");
    }

    public void Withdraw(decimal amount)
    {
        if (amount <= 0)
        {
            Console.WriteLine("Withdrawal must be positive.");
            return;
        }
        if (amount > Balance)
        {
            Console.WriteLine("Insufficient funds.");
            return;
        }
        Balance -= amount;
        Console.WriteLine($"Withdrew {amount:C}. New balance: {Balance:C}");
    }

    public void ShowBalance()
    {
        Console.WriteLine($"Current balance: {Balance:C}");
    }
}

class Program
{
    static void Main()
    {
        var account = new Account("1234", 500.00m);

        Console.Write("Enter PIN: ");
        while (!account.IsLocked() && !account.Authenticate(Console.ReadLine()))
        {
            Console.Write("Enter PIN: ");
        }

        if (account.IsLocked()) return;

        while (true)
        {
            Console.WriteLine("\n--- ATM Menu ---");
            Console.WriteLine("1) Withdraw");
            Console.WriteLine("2) Deposit");
            Console.WriteLine("3) Balance");
            Console.WriteLine("4) Exit");
            Console.Write("Choose an option: ");

            string choice = Console.ReadLine();
            switch (choice)
            {
                case "1":
                    Console.Write("Amount to withdraw: ");
                    if (decimal.TryParse(Console.ReadLine(), out decimal wAmount))
                        account.Withdraw(wAmount);
                    else
                        Console.WriteLine("Invalid amount.");
                    break;

                case "2":
                    Console.Write("Amount to deposit: ");
                    if (decimal.TryParse(Console.ReadLine(), out decimal dAmount))
                        account.Deposit(dAmount);
                    else
                        Console.WriteLine("Invalid amount.");
                    break;

                case "3":
                    account.ShowBalance();
                    break;

                case "4":
                    Console.WriteLine("Thank you for using the ATM.");
                    return;

                default:
                    Console.WriteLine("Invalid choice.");
                    break;
            }
        }
    }
}
