using System;
using System.Collections.Generic;
using System.Linq;
using System.Text.RegularExpressions;

class TextCleaner
{
    private static readonly HashSet<string> Stopwords = new HashSet<string>
    {
        "the", "a", "an", "of", "and", "or", "to", "in", "on", "at", "for", "by", "with", "is", "it"
    };

    private string text;

    public TextCleaner(string input)
    {
        text = input;
    }

    public TextCleaner Trim()
    {
        text = text.Trim();
        return this;
    }

    public TextCleaner CondenseSpaces()
    {
        text = Regex.Replace(text, @"\s+", " ");
        return this;
    }

    public TextCleaner RemoveNonPrintable()
    {
        text = new string(text.Where(c => !char.IsControl(c) || c == '\n').ToArray());
        return this;
    }

    public TextCleaner TitleCase()
    {
        // Title case: Capitalize first letter of each word except stopwords, unless it's the first word
        var words = text.Split(' ');
        for (int i = 0; i < words.Length; i++)
        {
            string w = words[i];
            string lw = w.ToLower();
            if (i == 0 || !Stopwords.Contains(lw))
            {
                words[i] = char.ToUpper(w[0]) + w.Substring(1).ToLower();
            }
            else
            {
                words[i] = lw;
            }
        }
        text = string.Join(" ", words);
        return this;
    }

    public int CountWords()
    {
        return Regex.Matches(text, @"\b\w+\b").Count;
    }

    public int CountSentences()
    {
        return Regex.Matches(text, @"[.!?](\s|$)").Count;
    }

    public List<(string Word, int Count)> TopWords(int topN = 5)
    {
        var words = Regex.Matches(text.ToLower(), @"\b\w+\b")
            .Cast<Match>()
            .Select(m => m.Value)
            .Where(w => !Stopwords.Contains(w))
            .GroupBy(w => w)
            .Select(g => (Word: g.Key, Count: g.Count()))
            .OrderByDescending(g => g.Count)
            .ThenBy(g => g.Word)
            .Take(topN)
            .ToList();

        return words;
    }

    public string GetText()
    {
        return text;
    }
}

class Program
{
    static void Main()
    {
        string input = @"
            the quick brown fox jumps over the lazy dog.
            a quick movement of the enemy will jeopardize five gunboats.
            with friends, or without, we go on.
        ";

        var cleaner = new TextCleaner(input)
            .RemoveNonPrintable()
            .Trim()
            .CondenseSpaces()
            .TitleCase();

        string cleaned = cleaner.GetText();
        Console.WriteLine("Cleaned Text:");
        Console.WriteLine(cleaned);

        Console.WriteLine($"\nWord Count: {cleaner.CountWords()}");
        Console.WriteLine($"Sentence Count: {cleaner.CountSentences()}");

        Console.WriteLine("\nTop 5 Words:");
        foreach (var (word, count) in cleaner.TopWords())
        {
            Console.WriteLine($"{word}: {count}");
        }
    }
}
